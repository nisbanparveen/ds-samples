package LinkedList;

import LinkedList.LinkedList.Node;

public class Deletion {
	
	public LinkedList deleteFirst(LinkedList list) {
		Node tempNode= list.head;
		
		if(tempNode != null) {
			list.head= tempNode.next;
		}
		return list;
	}
	
	public LinkedList deleteWithPosition(LinkedList list,int position) {
		
		int size= LinkedList.count(list);
		if ((position < 0) || (position > size - 1)) {
			System.out.println("Position Invalid");
			return list;
		}
		if(position==0) {
			Node currentNode= list.head;
			list.head= currentNode.next;
			return list;
		}else {  // Delete any index or at the ending
			Node previousNode= list.head;
			int count=1;
			while(count<position) {
				previousNode= previousNode.next;
				count++;
			}
			Node currentNode = previousNode.next;
			previousNode.next= currentNode.next;
			currentNode=null;
		}
		
		return list;
	}
	
	
	public LinkedList deleteEnding(LinkedList list) {
		int size= LinkedList.count(list);
		int count=1;
		Node previousNode= list.head;
		while(previousNode!=null) {
			previousNode= previousNode.next;
		}
		Node currentNode = previousNode.next;
		previousNode.next= currentNode.next;
		currentNode=null;
		return list;
		
	}
	public static void main(String[] args) {
		LinkedList list= new LinkedList();
		list.insert(list, 1);
		list.insert(list, 2);
		list.insert(list, 3);
		
		list.printList(list);
		Deletion delete= new Deletion();
		//delete.deleteFirst(list);
		delete.deleteEnding(list);
		
		list.printList(list);
	}

}
