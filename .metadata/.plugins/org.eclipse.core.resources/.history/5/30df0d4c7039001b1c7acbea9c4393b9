package LinkedList;

import LinkedList.LinkedListNode.Node;

public class FindIntersectingNode {

	public static Object FindNode(LinkedListNode list1, LinkedListNode list2) {
		int l1 = 0, l2 = 0, diff = 0;
		Node listNode1 = list1.head;
		Node listNode2 = list2.head;

		while (listNode1 != null) {
			System.out.println("1:" + listNode1.intdata);
			l1++;
			listNode1 = listNode1.next;

		}
		while (listNode2 != null) {
			System.out.println("2: " + listNode2.intdata);
			l2++;
			listNode2 = listNode2.next;
		}
		diff = l1 - l2;
		if (l1 < l2) {
			listNode1 = list2.head;
			listNode2 = list1.head;
			diff = l2 - l1;
		}
		listNode1 = list1.head;
		listNode2 = list2.head;
		for (int i = 0; i < diff; i++) {
			listNode1 = listNode1.next;
		}

		while (listNode1 != null && listNode2 != null) {
			if (listNode1.intdata.equals(listNode2.intdata))
				return listNode1.intdata;
			listNode1 = listNode1.next;
			listNode2 = listNode2.next;
		}
		return null;

	}

}
